{
  "_args": [
    [
      {
        "raw": "rework-plugin-function@^1.0.0",
        "scope": null,
        "escapedName": "rework-plugin-function",
        "name": "rework-plugin-function",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/Mistral/Documents/Coding/CUTUTOR/Demo/node_modules/rework-plugin-url"
    ]
  ],
  "_from": "rework-plugin-function@>=1.0.0 <2.0.0",
  "_id": "rework-plugin-function@1.0.2",
  "_inCache": true,
  "_location": "/rework-plugin-function",
  "_nodeVersion": "0.10.32",
  "_npmUser": {
    "name": "bclinkinbeard",
    "email": "ben.clinkinbeard@gmail.com"
  },
  "_npmVersion": "2.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rework-plugin-function@^1.0.0",
    "scope": null,
    "escapedName": "rework-plugin-function",
    "name": "rework-plugin-function",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/rework-plugin-url"
  ],
  "_resolved": "https://registry.npmjs.org/rework-plugin-function/-/rework-plugin-function-1.0.2.tgz",
  "_shasum": "12ce46fb5b29b5d935146683f6b98cf49d2373b9",
  "_shrinkwrap": null,
  "_spec": "rework-plugin-function@^1.0.0",
  "_where": "/Users/Mistral/Documents/Coding/CUTUTOR/Demo/node_modules/rework-plugin-url",
  "author": {
    "name": "reworkcss"
  },
  "bugs": {
    "url": "https://github.com/reworkcss/rework-plugin-function/issues"
  },
  "dependencies": {
    "rework-visit": "^1.0.0"
  },
  "description": "function() plugin for rework, formerly included in core",
  "devDependencies": {
    "mocha": "^1.17.1",
    "rework": "^1.0.0",
    "should": "^3.1.3"
  },
  "directories": {},
  "dist": {
    "shasum": "12ce46fb5b29b5d935146683f6b98cf49d2373b9",
    "tarball": "https://registry.npmjs.org/rework-plugin-function/-/rework-plugin-function-1.0.2.tgz"
  },
  "gitHead": "a5b83c1e3a103bad7ec21afba44c7aa015151e30",
  "homepage": "https://github.com/reworkcss/rework-plugin-function",
  "keywords": [
    "browser",
    "server",
    "css",
    "preprocess",
    "transform"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bclinkinbeard",
      "email": "ben.clinkinbeard@gmail.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    },
    {
      "name": "conradz",
      "email": "me@conradz.com"
    },
    {
      "name": "necolas",
      "email": "nicolasgallagher@gmail.com"
    },
    {
      "name": "slexaxton",
      "email": "alexsexton@gmail.com"
    }
  ],
  "name": "rework-plugin-function",
  "optionalDependencies": {},
  "readme": "rework-plugin-function\n====================\n\n[![Build Status](https://travis-ci.org/reworkcss/rework-plugin-function.png)](https://travis-ci.org/reworkcss/rework-plugin-function)\n\nfunction() plugin for rework, formerly included in core\n\nAdd user-defined CSS functions.\n\nFor example create `black(0.5)` shortcut, to replace\nlong `rgba(0, 0, 0, 0.5)`.\n\n```js\nvar rework = require('rework'),\nvar reworkFunction = require('rework-plugin-function');\n\nvar css = rework(css)\n  .use(reworkFunction({ black: black }))\n  .toString()\n\nfunction black(opacity) {\n  return 'rgba(0, 0, 0, ' + opacity + ')';\n}\n```\n\nUser code will receive CSS arguments and replace user-defined function\nby returned code.\n\n```css\ninput {\n  box-shadow: 0 0 5px black(0.7);\n}\n```\n\nyields:\n\n```css\ninput {\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.7);\n}\n```\n\nNested functions works well too:\n\n```javascript\nvar css = rework(css)\n  .use(reworkFunction({\n    subtract: function(a, b) { return a - b },\n    multiply: function(a, b) { return a * b },\n    divide: function(a, b) { return a / b },\n    floor: Math.floor\n  }))\n.toString()\n```\n\n```css\ninput {\n  top: divide(subtract(30, floor(multiply(20, 10))), 2);\n}\n```\n\nWould yield:\n\n```css\ninput {\n  top: -85;\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/reworkcss/rework-plugin-function.git"
  },
  "scripts": {
    "test": "mocha --require should --reporter spec"
  },
  "version": "1.0.2"
}
