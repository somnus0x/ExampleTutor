{
  "_args": [
    [
      {
        "raw": "react-on-screen",
        "scope": null,
        "escapedName": "react-on-screen",
        "name": "react-on-screen",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Mistral/Documents/Coding/CUTUTOR/Demo"
    ]
  ],
  "_from": "react-on-screen@latest",
  "_id": "react-on-screen@1.1.4",
  "_inCache": true,
  "_location": "/react-on-screen",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-on-screen-1.1.4.tgz_1494530793886_0.7921340870670974"
  },
  "_npmUser": {
    "name": "sniphpet",
    "email": "fdkhadra@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-on-screen",
    "scope": null,
    "escapedName": "react-on-screen",
    "name": "react-on-screen",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-on-screen/-/react-on-screen-1.1.4.tgz",
  "_shasum": "433b65a2f901705072393236352bc49aa0eef2a8",
  "_shrinkwrap": null,
  "_spec": "react-on-screen",
  "_where": "/Users/Mistral/Documents/Coding/CUTUTOR/Demo",
  "author": {
    "name": "Fadi Khadra",
    "email": "fdkhadra@gmail.com",
    "url": "https://fkhadra.github.io"
  },
  "bugs": {
    "url": "https://github.com/fkhadra/react-on-screen/issues"
  },
  "dependencies": {
    "lodash.throttle": "^4.1.1",
    "prop-types": "^15.5.8"
  },
  "description": "A wrapper component to track if your react component is visible on screen",
  "devDependencies": {
    "babel-cli": "^6.11.4",
    "babel-loader": "^7.0.0",
    "babel-preset-env": "^1.4.0",
    "babel-preset-react": "^6.11.1",
    "babel-preset-stage-0": "^6.5.0",
    "chai": "^3.5.0",
    "enzyme": "^2.4.1",
    "eslint": "^3.2.2",
    "eslint-config-airbnb": "^14.1.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^4.0.0",
    "eslint-plugin-react": "^6.0.0",
    "jsdom": "^9.4.2",
    "karma": "^1.2.0",
    "mocha": "^3.0.2",
    "react-addons-test-utils": "^15.3.0",
    "sinon": "^2.1.0",
    "webpack": "^2.4.1"
  },
  "directories": {},
  "dist": {
    "shasum": "433b65a2f901705072393236352bc49aa0eef2a8",
    "tarball": "https://registry.npmjs.org/react-on-screen/-/react-on-screen-1.1.4.tgz"
  },
  "homepage": "https://github.com/fkhadra/react-on-screen#readme",
  "keywords": [
    "react",
    "viewport",
    "react-component",
    "visible",
    "track",
    "react-on-screen",
    "screen"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "sniphpet",
      "email": "fdkhadra@gmail.com"
    }
  ],
  "name": "react-on-screen",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.5.4",
    "react-dom": "^15.5.4"
  },
  "readme": "# React on screen [![npm](https://img.shields.io/npm/dt/react-on-screen.svg)]() [![npm](https://img.shields.io/npm/v/react-on-screen.svg)]() [![license](https://img.shields.io/github/license/fkhadra/react-on-screen.svg?maxAge=2592000)]()\n\nProvide a component to wrap your react component and check if there are visible on the screen.\nYou can use this component to trigger an entrance animation for instance !\n\n## How it works ?\n\nThe component simply passes a ```isVisible``` props to your component.\n\n## Features\n\n- Don't rely on [findDOMNode](https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode). So it can be used with a stateless component.\n- Transfer all the props to the wrapped component\n- Visibility can be tracked only once\n- Event listeners are implemented with throttle to avoid  memory leaks or performance issues\n\n## Demo\n\nView the [demo](https://fkhadra.github.io/react-on-screen/demo-react-on-screen.html).\n\n## Installation\n\nUsing [npm](https://www.npmjs.com/) :\n\n```\n$ npm install --save react-on-screen\n$ yarn add react-on-screen\n```\n\nA UMD build is also available :\n\n```html\n<script src=\"./dist/ReactOnScreen.min.js\"></script>\n```\n\n## What's it looks like?\n\n```javascript\nimport React from 'react';\nimport TrackVisibility from 'react-on-screen'; // CommonJs : require('react-on-screen').default\n\n\nconst ComponentToTrack = (props) => {\n    const style = {\n        background: props.isVisible ? 'red' : 'blue'\n    };\n\n    return <div style={style}>Hello</div>;\n}\n\nconst YourApp = () => {\n    return (\n       {/* Some Stuff */}\n        <TrackVisibility>\n            <ComponentToTrack />\n        </TrackVisibility>\n       {/* Some Stuff */}\n    );\n}\n\n```\n\n## Api\n\n|props           |type            |default|description|\n|----------------|----------------|-------|-----------|\n|once            |bool            |false|If set to true track the visibility only once and remove the event listeners|\n|throttleInterval|int             |150|Tweak the event listeners. See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)|\n|children        |React Components|  -  |Can be on or many react components|\n|style           |object          |  -  |Style attributes|\n|className       |string          |  -  |Css classes|\n|offset          |number          |  0  |Allows you to specify how far left or above of the viewport you want to set isVisible to `true`|\n\n## TODO\n\n- [ ] Check for partial visibility\n\n## Contributions\n\nAny contributions is welcome !\n\n- Lint : ``` $ npm run lint ```\n- Test : ``` $ npm run test ```\n- Build : ``` $ npm run build // will lint and run test before ```\n\n## Release Notes\n\n### v1.1.4\n\n- React and react-dom are now peer dependencies\n\n### v1.1.1\n\n- switched to webpack2\n- Upgraded to stand alone prop-types\n\n\n## License\n\nLicensed under MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fkhadra/react-on-screen.git"
  },
  "scripts": {
    "build": "NODE_ENV=production ./scripts/build.sh",
    "build-dev": "NODE_ENV=developement ./scripts/build.sh",
    "lint": "eslint src/",
    "prebuild": "npm run test",
    "pretest": "npm run lint",
    "test": "mocha --compilers js:babel-core/register --require jsdomSetup.js --recursive test/"
  },
  "version": "1.1.4"
}
